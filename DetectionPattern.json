{
    "target": "c++",
    "imports": [],
    "type_definitions": {
        "schemas": [],
        "native_types": {
            "window1*": {
                "type_symbol": "window1*",
                "destructor": "~window()"
            },
            "std::map<int,std::vector<int>>": {
                "type_symbol": "map",
                "destructor": "~map()"
            },
            "model*": {
                "type_symbol": "model.h",
                "destructor": "~model()"
            },
            "double": {
                "type_symbol": "double",
                "destructor": "delete"
            },
            "std::vector<std::string>": {
                "type_symbol": "vector",
                "destructor": "~vector()"
            },
            "std::map<string,model*>": {
                "type_symbol": "map",
                "destructor": "~map()"
            },
            "vector<tuple<string,int,string>>": {
                "type_symbol": "vector<tuple<string,int,string>>",
                "destructor": "vector<tuple<std::string,int,std::string>>"
            },
            "json": {
                "type_symbol": "json",
                "destructor": "json"
            },
            "vector<int>": {
                "type_symbol": "vector<int>",
                "destructor": "vector<int>"
            }
        },
        "events": []
    },
    "top_level_astds": [
        {
            "name": "DetectionPattern",
            "parameters": [
                {
                    "name": "window_parameters",
                    "type": "json",
                    "domain": {
                        "type": "UnboundedDomain"
                    }
                },
                {
                    "name": "kde_parameters",
                    "type": "double",
                    "domain": {
                        "type": "UnboundedDomain"
                    }
                },
                {
                    "name": "kmeans_parameters",
                    "type": "double",
                    "domain": {
                        "type": "UnboundedDomain"
                    }
                },
                {
                    "name": "lof_parameters",
                    "type": "int",
                    "domain": {
                        "type": "UnboundedDomain"
                    }
                }
            ],
            "type": "QInterleave",
            "typed_astd": {
                "attributes": [],
                "code": "",
                "interruptCode": "",
                "quantified_variable": {
                    "name": "userId",
                    "type": "int",
                    "domain": {
                        "type": "UnboundedDomain"
                    }
                },
                "sub_astd": {
                    "name": "",
                    "type": "Flow",
                    "typed_astd": {
                        "attributes": [
                            {
                                "name": "data",
                                "type": "std::map<int,std::vector<int>>",
                                "initial_value": "{}"
                            },
                            {
                                "name": "sliding_window",
                                "type": "window1*",
                                "initial_value": "new window1(window_parameters)"
                            },
                            {
                                "name": "alerts",
                                "type": "vector<tuple<string,int,string>>",
                                "initial_value": "{}"
                            }
                        ],
                        "code": "",
                        "interruptCode": "",
                        "left_astd": {
                            "name": "CombineModels",
                            "type": "Flow",
                            "invariant": "",
                            "typed_astd": {
                                "attributes": [],
                                "code": "",
                                "interruptCode": "",
                                "left_astd": {
                                    "name": "combination",
                                    "type": "Flow",
                                    "invariant": "",
                                    "typed_astd": {
                                        "attributes": [
                                            {
                                                "name": "scores",
                                                "type": "vector<int>",
                                                "initial_value": "{}"
                                            }
                                        ],
                                        "code": "",
                                        "interruptCode": "",
                                        "left_astd": {
                                            "name": "detectors",
                                            "type": "QFlow",
                                            "typed_astd": {
                                                "attributes": [
                                                    {
                                                        "name": "mapdetectors",
                                                        "type": "std::map<string,model*>",
                                                        "initial_value": "{Code::init_map(kde_parameters,kmeans_parameters,lof_parameters)}"
                                                    }
                                                ],
                                                "code": "",
                                                "interruptCode": "",
                                                "quantified_variable": {
                                                    "name": "d",
                                                    "type": "string",
                                                    "domain": {
                                                        "type": "EnumeratedDomain",
                                                        "value": [
                                                            "kmeans",
                                                            "kde",
                                                            "lof"
                                                        ]
                                                    }
                                                },
                                                "sub_astd": {
                                                    "name": "",
                                                    "type": "Flow",
                                                    "typed_astd": {
                                                        "attributes": [],
                                                        "code": "",
                                                        "interruptCode": "",
                                                        "left_astd": {
                                                            "name": "training",
                                                            "type": "Automaton",
                                                            "typed_astd": {
                                                                "attributes": [],
                                                                "code": "",
                                                                "interruptCode": "",
                                                                "states": [
                                                                    {
                                                                        "name": "S0",
                                                                        "astd": {
                                                                            "type": "Elem",
                                                                            "typed_astd": {}
                                                                        },
                                                                        "entry_code": "",
                                                                        "stay_code": "",
                                                                        "exit_code": ""
                                                                    }
                                                                ],
                                                                "transitions": [
                                                                    {
                                                                        "arrow_type": "Local",
                                                                        "arrow": {
                                                                            "from_state_name": "S0",
                                                                            "to_state_name": "S0"
                                                                        },
                                                                        "event_template": {
                                                                            "label": "e",
                                                                            "parameters": [
                                                                                {
                                                                                    "parameter_kind": "Expression",
                                                                                    "parameter": "userId"
                                                                                },
                                                                                {
                                                                                    "parameter_kind": "Capture",
                                                                                    "parameter": {
                                                                                        "variable_name": "eventDate",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "parameter_kind": "Capture",
                                                                                    "parameter": {
                                                                                        "variable_name": "eventId",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "when": []
                                                                        },
                                                                        "guard": "",
                                                                        "action": "{sliding_window->fit_partial(mapdetectors[d],data)}",
                                                                        "step": false,
                                                                        "from_final_state_only": false
                                                                    }
                                                                ],
                                                                "shallow_final_state_names": [
                                                                    "S0"
                                                                ],
                                                                "deep_final_state_names": [],
                                                                "initial_state_name": "S0"
                                                            }
                                                        },
                                                        "right_astd": {
                                                            "name": "scoring",
                                                            "type": "Automaton",
                                                            "typed_astd": {
                                                                "attributes": [],
                                                                "code": "",
                                                                "interruptCode": "",
                                                                "states": [
                                                                    {
                                                                        "name": "S0",
                                                                        "astd": {
                                                                            "type": "Elem",
                                                                            "typed_astd": {}
                                                                        },
                                                                        "entry_code": "",
                                                                        "stay_code": "",
                                                                        "exit_code": ""
                                                                    }
                                                                ],
                                                                "transitions": [
                                                                    {
                                                                        "arrow_type": "Local",
                                                                        "arrow": {
                                                                            "from_state_name": "S0",
                                                                            "to_state_name": "S0"
                                                                        },
                                                                        "event_template": {
                                                                            "label": "e",
                                                                            "parameters": [
                                                                                {
                                                                                    "parameter_kind": "Expression",
                                                                                    "parameter": "userId"
                                                                                },
                                                                                {
                                                                                    "parameter_kind": "Capture",
                                                                                    "parameter": {
                                                                                        "variable_name": "eventDate",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                {
                                                                                    "parameter_kind": "Capture",
                                                                                    "parameter": {
                                                                                        "variable_name": "eventId",
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "when": []
                                                                        },
                                                                        "guard": "",
                                                                        "action": "{mapdetectors[d]->score_partial(eventDate,eventId,scores)}",
                                                                        "step": false,
                                                                        "from_final_state_only": false
                                                                    }
                                                                ],
                                                                "shallow_final_state_names": [
                                                                    "S0"
                                                                ],
                                                                "deep_final_state_names": [],
                                                                "initial_state_name": "S0"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "right_astd": {
                                            "name": "majorityVote",
                                            "type": "Automaton",
                                            "invariant": "",
                                            "typed_astd": {
                                                "attributes": [],
                                                "code": "",
                                                "interruptCode": "",
                                                "states": [
                                                    {
                                                        "name": "S0",
                                                        "astd": {
                                                            "type": "Elem",
                                                            "typed_astd": {}
                                                        },
                                                        "entry_code": "",
                                                        "stay_code": "",
                                                        "exit_code": "",
                                                        "invariant": ""
                                                    }
                                                ],
                                                "transitions": [
                                                    {
                                                        "arrow_type": "Local",
                                                        "arrow": {
                                                            "from_state_name": "S0",
                                                            "to_state_name": "S0"
                                                        },
                                                        "event_template": {
                                                            "label": "e",
                                                            "parameters": [
                                                                {
                                                                    "parameter_kind": "Expression",
                                                                    "parameter": "userId"
                                                                },
                                                                {
                                                                    "parameter_kind": "Capture",
                                                                    "parameter": {
                                                                        "variable_name": "eventDate",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                {
                                                                    "parameter_kind": "Capture",
                                                                    "parameter": {
                                                                        "variable_name": "eventId",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            ],
                                                            "when": []
                                                        },
                                                        "guard": "",
                                                        "action": "{Code::majorityVote(scores,alerts,eventId,eventDate)}",
                                                        "step": false,
                                                        "from_final_state_only": false
                                                    }
                                                ],
                                                "shallow_final_state_names": [
                                                    "S0"
                                                ],
                                                "deep_final_state_names": [],
                                                "initial_state_name": "S0"
                                            }
                                        }
                                    }
                                },
                                "right_astd": {
                                    "name": "Data_Parser",
                                    "type": "Automaton",
                                    "typed_astd": {
                                        "attributes": [],
                                        "code": "",
                                        "interruptCode": "",
                                        "states": [
                                            {
                                                "name": "S0",
                                                "astd": {
                                                    "type": "Elem",
                                                    "typed_astd": {}
                                                },
                                                "entry_code": "",
                                                "stay_code": "",
                                                "exit_code": ""
                                            }
                                        ],
                                        "transitions": [
                                            {
                                                "arrow_type": "Local",
                                                "arrow": {
                                                    "from_state_name": "S0",
                                                    "to_state_name": "S0"
                                                },
                                                "event_template": {
                                                    "label": "e",
                                                    "parameters": [
                                                        {
                                                            "parameter_kind": "Expression",
                                                            "parameter": "userId"
                                                        },
                                                        {
                                                            "parameter_kind": "Capture",
                                                            "parameter": {
                                                                "variable_name": "eventDate",
                                                                "type": "string"
                                                            }
                                                        },
                                                        {
                                                            "parameter_kind": "Capture",
                                                            "parameter": {
                                                                "variable_name": "eventId",
                                                                "type": "string"
                                                            }
                                                        }
                                                    ],
                                                    "when": []
                                                },
                                                "guard": "",
                                                "action": "{Code::formatting_data(data,sliding_window,eventDate)}",
                                                "step": false,
                                                "from_final_state_only": false
                                            }
                                        ],
                                        "shallow_final_state_names": [
                                            "S0"
                                        ],
                                        "deep_final_state_names": [],
                                        "initial_state_name": "S0"
                                    }
                                }
                            }
                        },
                        "right_astd": {
                            "name": "TemporalInterval",
                            "type": "Kleene",
                            "invariant": "",
                            "typed_astd": {
                                "attributes": [],
                                "code": "",
                                "interruptCode": "",
                                "sub_astd": {
                                    "name": "",
                                    "type": "TimedInterrupt",
                                    "typed_astd": {
                                        "attributes": [
                                            {
                                                "name": "count",
                                                "type": "int",
                                                "initial_value": "0"
                                            }
                                        ],
                                        "code": "",
                                        "interruptCode": "{Code::alert(count)}",
                                        "duration": "300",
                                        "duration_unit": "Second",
                                        "left_astd": {
                                            "name": "CountOccurrence",
                                            "type": "Automaton",
                                            "invariant": "",
                                            "typed_astd": {
                                                "attributes": [],
                                                "code": "",
                                                "interruptCode": "",
                                                "states": [
                                                    {
                                                        "name": "S0",
                                                        "astd": {
                                                            "type": "Elem",
                                                            "typed_astd": {}
                                                        },
                                                        "entry_code": "",
                                                        "stay_code": "",
                                                        "exit_code": "",
                                                        "invariant": ""
                                                    }
                                                ],
                                                "transitions": [
                                                    {
                                                        "arrow_type": "Local",
                                                        "arrow": {
                                                            "from_state_name": "S0",
                                                            "to_state_name": "S0"
                                                        },
                                                        "event_template": {
                                                            "label": "e1",
                                                            "parameters": [
                                                                {
                                                                    "parameter_kind": "Expression",
                                                                    "parameter": "userId"
                                                                },
                                                                {
                                                                    "parameter_kind": "Capture",
                                                                    "parameter": {
                                                                        "variable_name": "alertId",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                {
                                                                    "parameter_kind": "Capture",
                                                                    "parameter": {
                                                                        "variable_name": "alertSeverity",
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            ],
                                                            "when": []
                                                        },
                                                        "guard": "alertSeverity == \"Medium\" || alertSeverity==\"High\"",
                                                        "action": "",
                                                        "step": false,
                                                        "from_final_state_only": false
                                                    }
                                                ],
                                                "shallow_final_state_names": [
                                                    "S0"
                                                ],
                                                "deep_final_state_names": [],
                                                "initial_state_name": "S0"
                                            }
                                        },
                                        "right_astd": {
                                            "name": "Alert",
                                            "type": "Automaton",
                                            "invariant": "",
                                            "typed_astd": {
                                                "attributes": [],
                                                "code": "",
                                                "interruptCode": "",
                                                "states": [
                                                    {
                                                        "name": "S0",
                                                        "astd": {
                                                            "type": "Elem",
                                                            "typed_astd": {}
                                                        },
                                                        "entry_code": "",
                                                        "stay_code": "",
                                                        "exit_code": "",
                                                        "invariant": ""
                                                    }
                                                ],
                                                "transitions": [],
                                                "shallow_final_state_names": [
                                                    "S0"
                                                ],
                                                "deep_final_state_names": [],
                                                "initial_state_name": "S0"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    ],
    "conf": []
}